name: Build

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
        default: 'master'

jobs:
  apple-darwin-aarch64:
    name: apple darwin aarch64
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'samsung/netcoredbg'
          ref: ${{ inputs.branch }} 
      - name: Build
        run: |
          mkdir build
          cd build
          CC=clang CXX=clang++ cmake .. -DDOTNET_DIR=/Users/runner/.dotnet
          make
          file src/netcoredbg
      - uses: actions/upload-artifact@v4
        with:
          name: netcoredbg-macos-arm64
          path: |
            build/src/netcoredbg
            build/src/libdbgshim.dylib
            build/src/ManagedPart.dll
            build/src/Microsoft.CodeAnalysis.CSharp.Scripting.dll
            build/src/Microsoft.CodeAnalysis.CSharp.dll
            build/src/Microsoft.CodeAnalysis.Scripting.dll
            build/src/Microsoft.CodeAnalysis.dll

  linux-x86_64:
    name: linux x86_64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'samsung/netcoredbg'
          ref: ${{ inputs.branch }}
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Build
        run: |
          mkdir build
          cd build
          CC=clang CXX=clang++ cmake .. -DDOTNET_DIR=/usr/share/dotnet
          make
      - uses: actions/upload-artifact@v4
        with:
          name: netcoredbg-linux-x86_64
          path: |
            build/src/netcoredbg
            build/src/libdbgshim.dylib
            build/src/ManagedPart.dll
            build/src/Microsoft.CodeAnalysis.CSharp.Scripting.dll
            build/src/Microsoft.CodeAnalysis.CSharp.dll
            build/src/Microsoft.CodeAnalysis.Scripting.dll
            build/src/Microsoft.CodeAnalysis.dll